     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  ;A file name and a decimal number (on 16 bits) are given (the decimal number is in the unsigned interpretation). Create a file with the given name and write each digit composing the number on a different line to fil
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fopen,fprintf,fclose               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                  import fprintf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import fclose msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 6669732E74787400            fileName db "fis.txt",0
    16 00000008 7700                        access db "w",0
    17 0000000A D2040000                    number dd 1234
    18 0000000E 25640A0D00                  printFormat db "%d",10,13,0
    19 00000013 FFFFFFFF                    fileDescriptor dd -1
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 68[08000000]                    push dword access
    24 00000005 68[00000000]                    push dword fileName 
    25 0000000A FF15[00000000]                  call [fopen]
    26 00000010 83C408                          add esp,4*2
    27                                      
    28 00000013 83F800                          cmp eax,0 
    29 00000016 7450                            je end_ 
    30                                          
    31 00000018 A3[13000000]                    mov [fileDescriptor],eax
    32                                          
    33                                          
    34 0000001D A1[0A000000]                    mov eax,[number]
    35 00000022 66BB0A00                        mov bx, word 10
    36                                          loop_:
    37 00000026 31D2                                xor edx,edx
    38                                              
    39 00000028 66F7F3                              div bx
    40                                              
    41 0000002B 6683F800                            cmp ax,0 
    42 0000002F 7506                                jnz skip
    43                                              
    44 00000031 6683FA00                            cmp dx,0
    45 00000035 7422                                je out_ 
    46                                              skip: 
    47 00000037 60                                  pushad 
    48                                              
    49 00000038 52                                  push dword edx 
    50 00000039 68[0E000000]                        push dword printFormat 
    51 0000003E FF35[13000000]                      push dword [fileDescriptor]
    52 00000044 FF15[00000000]                      call [fprintf]
    53 0000004A 83C40C                              add esp,4*3 
    54                                              
    55 0000004D 61                                  popad 
    56                                  
    57 0000004E 66BA0000                            mov dx,0 
    58 00000052 6652                                push dx 
    59 00000054 6650                                push ax 
    60 00000056 58                                  pop eax 
    61                                              
    62 00000057 EBCD                                jmp loop_
    63                                          out_:
    64                                          
    65 00000059 FF35[13000000]                  push dword [fileDescriptor]
    66 0000005F FF15[00000000]                  call [fclose]
    67 00000065 83C404                          add esp,4
    68                                          end_:
    69                                          ; exit(0)
    70 00000068 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    71 0000006A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
